server:
  port: ${SERVER_PORT:8080}
  error:
    include-stacktrace: ${ERROR_STACKTRACE:never}
    include-message: ${ERROR_MESSAGE:never}
  shutdown: graceful

spring:
  application:
    name: readingtrace
  config:
    activate:
      on-profile: prod
  output:
    ansi:
      enabled: ${ANSI_ENABLED:never}
  datasource:
    url: ${DATABASE_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: ${DB_POOL_SIZE:10}
      minimum-idle: ${DB_POOL_MIN_IDLE:5}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:30000}
      idle-timeout: ${DB_IDLE_TIMEOUT:600000}
      max-lifetime: ${DB_MAX_LIFETIME:1800000}
  jpa:
    show-sql: ${JPA_SHOW_SQL:false}
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:validate}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: ${JPA_FORMAT_SQL:false}
    open-in-view: false

#actuator
management:
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_ENDPOINTS:health,info}
  endpoint:
    health:
      show-details: ${ACTUATOR_HEALTH_DETAILS:when-authorized}
      probes:
        enabled: true
  security:
    enabled: ${ACTUATOR_SECURITY:true}
  info:
    env:
      enabled: true
    build:
      enabled: true

logging:
  level:
    root: INFO
    org.hibernate.SQL: WARN
    com.yurakim.readingtrace: INFO
  file:
    name: /var/log/readingtrace/readingtrace.log
    max-size: 100MB
    max-history: 30
  pattern:
    file: ${LOG_PATTERN:%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n}
    console: ${CONSOLE_LOG_PATTERN:%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n}

openai:
  base-url: https://api.openai.com/v1
  api-key: ${OPENAI_API_KEY}

jwt:
  issuer: readingtrace
  expiration-hours: 12
  access-expiration-minutes: 15
  refresh-expiration-days: 7

frontend:
  url: https://readingtrace.site
cors:
  allowed-origins: ${frontend.url}